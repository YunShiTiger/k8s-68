# k8s   v1.20.6


节点IP地址	角色	安装组件名称
192.168.33.100	    master01（管理节点）	etcd、kube-apiserver、kube-controller-manager、kube-scheduler
192.168.33.101	node01（计算节点）	docker 、kubelet、kube-proxy
192.168.33.102	node02（计算节点）	docker 、kubelet、kube-proxy
192.168.33.103	node03（计算节点）	docker 、kubelet、kube-proxy



## ingress-nginx
https://kubernetes.github.io/ingress-nginx/deploy/

k8s.gcr.io/ingress-nginx/controller:v0.46.0@sha256:52f0058bed0a17ab0fb35628ba97e8d52b5d32299fbc03cc0f6c7b9ff036b61a
-->
willdockerhub/ingress-nginx-controller:v0.46.0@sha256:52f0058bed0a17ab0fb35628ba97e8d52b5d32299fbc03cc0f6c7b9ff036b61a



## docker for desktop
https://github.com/AliyunContainerService/k8s-for-docker-desktop

## ssh
ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa
ssh-copy-id -i ~/.ssh/id_dsa.pub root@node02
root 用户免密登录

# k8s 部署脚本 star
https://github.com/matrix-ops/kbi.git


# OPTS="$OPTS,\"$(eval echo $(eval echo '$'"$node"))\""


yum install bash-completion -y
source /usr/share/bash-completion/bash_completion
yum install wget socat ipvsadm -y
wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/latest/sealos && chmod +x sealos && mv sealos /usr/bin && wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/2fb10b1396f8c6674355fcc14a8cda7c-v1.20.0/kube1.20.0.tar.gz
sealos init --passwd 'root' --master 192.168.33.100 --node 192.168.33.101 --node 192.168.33.102 --pkg-url /root/kube1.20.0.tar.gz --version v1.20.0
sealos clean --master 192.168.33.100 --node 192.168.33.101 --node 192.168.33.102 --force




[root@linux-node01 ~]# yum install -y ipvsadm
[root@linux-node01 ~]# ipvsadm -Ln　　
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port Scheduler Flags
  -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
TCP  10.1.0.1:443 rr persistent 10800
  -> 192.168.56.11:6443           Masq    1      0          0
TCP  10.1.213.126:80 rr
  -> 10.2.73.10:80                Masq    1      0          1
  -> 10.2.73.11:80                Masq    1      0          1
  -> 10.2.73.12:80                Masq    1      0          0

查看LVS状态可以看到，当访问VIP：10.1.213.126时，会进行负载均衡到各个pod
