---
apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
kind: ClusterRole
metadata:
  name: pods-reader
  namespace: default #  ClusterRole不生效全局  Role生效
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: docker-registry
  namespace: default
imagePullSecrets:
  - name: "myregistrykey"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pods-bind
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pods-reader
subjects:
  # 权限的承受者 "User", "Group", and "ServiceAccount".
  - kind: ServiceAccount
    name: docker-registry
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pods-bind
  namespace: default # 不生效全局
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pods-reader
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: xxx
# kubectl create role pods-reader --verb=get,list,watch --resource=pods --dry-run -o yaml
# kubectl create rolebinding pods-bind --role=pods-reader --serviceaccount=default:docker-registry --dry-run -o yaml

# kubectl create clusterrole pods-reader --verb=get,list,watch --resource=pods --dry-run -o yaml
# kubectl create clusterrolebinding pods-bind --clusterrole=pods-reader --user=xxx--dry-run -o yaml
